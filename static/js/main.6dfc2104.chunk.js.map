{"version":3,"sources":["components/state/index.js","components/state/reducer.js","components/contacts/index.js","components/contacts/Contacts.js","components/state/someState.js","components/prefs/Prefs.js","components/prefs/index.js","components/info/index.js","components/info/Info.js","components/main/index.js","components/main/Main.js","components/menu/index.js","components/menu/Menues.js","components/routerNav/routerNav.js","components/routerNav/index.js","App.js","index.js"],"names":["appReducer","state","action","type","console","log","length","a","async","fetch","resp","json","getJson","then","result","dish","push","key","payload","Object","entries","map","el","value","error","Contacts","className","initialState","settings","importedState","Prefs","props","change","dispatch","setState","localStorage","setItem","JSON","stringify","vegan","diet","noGluten","raw","getItem","data","parse","this","i","checked","onChange","React","Component","Info","onClick","Main","Menues","Routerr","RouterNav","useReducer","useEffect","to","exact","path","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6dfc2104.chunk.js","sourcesContent":["import appReducer from './reducer';\n\nexport default appReducer;","let getJson = async () => {\n  let resp = await fetch('/structure.json'); //public folder\n  let json = await resp.json();\n  return await json;\n};\n\nlet reducer = (state, action) => {\n  switch (action.type) {\n    case 'say': {\n      console.log(state);\n      return state;\n    }\n\n    case 'fill': {\n      if (state['dishes'].length === 0) {\n        getJson().then(result => {\n          for (let dish in result) {\n            result[dish]['id'] = state['dishes'].length;\n            state['dishes'].push({ [dish]: result[dish] });\n          }\n        });\n      }\n      return state;\n    }\n\n    case 'errase': {\n      state['dishes'] = [];\n      return state;\n    }\n\n    case 'changePref': {\n      let key = action.payload;\n      // state['prefs'][key] = !state['prefs'][key];\n      Object.entries(state).map(el => {\n        if (el[0] === 'prefs') {\n          Object.entries(el).map(el => {\n            if (typeof el[1] === 'object') el[1][key] = !el[1][key];\n          });\n        }\n      });\n      return state;\n    }\n\n    case 'setPref': {\n      let [key, value] = [...action.payload];\n      // state['prefs'][val[0]] = val[1] //- old version with state changing\n      Object.entries(state).map(el => {\n        //iterates through state looking for prefs\n        if (el[0] === 'prefs') {\n          Object.entries(el).map(el => {\n            //iterates through state[prefs] looking for key\n            if (typeof el[1] === 'object') el[1][key] = value;\n          });\n        }\n      });\n      return state;\n    }\n\n    default: {\n      console.error(`${action.type} doesn't support`);\n      return state;\n    }\n  }\n};\n\nexport default reducer;\n","import Contacts from './Contacts';\n\nexport default Contacts;","import React from 'react';\nimport './contacts.scss';\n\nconst Contacts = () => {\n  return (\n    <div className=\"contacts block\">\n      Contacts!\n    </div>\n  );\n};\n\nexport default Contacts;","let initialState = {\n  'dishes': [],       //fills from json\n  'prefs':{\n    'pagination': 10, //10 dishes per page\n    'theme': 'dark',  //default theme\n    'vegan': false,   //show only vegan dishes\n    'diet': false,    //show only diet dishes\n    'noGluten': false,//show only gluten free dishes\n    'caloriesFromTo': [0,1000],\n  },\n  'order': [],        //dishes ids goes here\n  'testing':[]\n}\n\nexport default initialState;","import React from 'react';\nimport importedState from '../state/someState';\nimport './prefs.scss';\nlet settings = importedState['prefs']\n\n\nclass Prefs extends React.Component  {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      vegan: settings['vegan'],\n      diet: settings['diet'],\n      noGluten: settings['noGluten']\n    }\n  }\n\n  componentDidMount(){ //load data from localStore on reload\n    let raw = localStorage.getItem('settings');\n    if (raw !== null) {\n      let data = JSON.parse(raw);\n      for (let key in data) {\n        this.props.dispatch({ type: 'setPref', payload: [key, data[key]] });\n      }\n      for(let i in this.state) {\n        this.setState({ [i] : settings[i]})\n      }\n    }\n\n      // Object.entries(settings).map(el => {\n      //   if(el[0] === 'theme')\n      //     {\n      //       settings['theme'] = 'text'\n      //     }\n      //     return settings\n      //   }\n      //   )\n      // console.log(settings)\n  }\n\n  change = type => {\n    this.props.dispatch({ type: 'changePref', payload: type });\n    this.setState({ [type] : !this.state[type]}); //just for re-rendering checkboxes\n    localStorage.setItem('settings', JSON.stringify(settings))\n  }\n\n  render() {\n    return(\n      <div className=\"prefs block\">\n        <label><input checked = {settings['vegan']} onChange={()=>{this.change('vegan')}} type=\"checkbox\"/> Vegan</label>\n\n        <label><input checked = {settings['diet']} onChange={()=>{this.change('diet')}} type=\"checkbox\"/> Diet</label>\n        \n        <label><input checked = {settings['noGluten']} onChange={()=>{this.change('noGluten')}} type=\"checkbox\"/> Gluten free</label>\n      </div>\n    )\n  }\n};\n\nexport default Prefs;","import Prefs from './Prefs';\n\nexport default Prefs;","import Info from './Info';\n\nexport default Info;","import React from 'react';\nimport './info.scss';\n\n\n\nconst Info = (props) => {\n  return (\n    <div className=\"info block\">\n      {/* <p onClick={() => {props.dispatch({ type: 'getState' })}}>Info!</p> */}\n      <p onClick={() => {props.dispatch({ type: 'fill' })}}>Fill!</p>\n      <p onClick={() => {props.dispatch({ type: 'say' })}}>Say!</p>\n      <p onClick={() => {props.dispatch({ type: 'errase' })}}>Clean!</p>\n    </div>\n  );\n};\n\nexport default Info;","import Main from './Main';\n\nexport default Main;","import React from 'react';\nimport './main.scss';\n\nconst Main = () => {\n  return (\n      <div className=\"main block\">Main here</div>\n  );\n};\n\nexport default Main;","import Menues from './Menues';\n\nexport default Menues;","import React from 'react';\nimport './menues.scss';\n\nconst Menues = () => {\n  return (\n    <div className=\"menues block\">\n      Menues!\n    </div>\n  );\n};\n\nexport default Menues;","import React, { useReducer, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport './routerNav.scss';\nimport appReducer from '../state';\nimport Contacts from '../contacts';\nimport Prefs from '../prefs';\nimport Info from '../info';\nimport Main from '../main';\nimport Menues from '../menu';\nimport importedState from '../state/someState'\n\nfunction Routerr() {\n\n  // eslint-disable-next-line\n  const [state, dispatch] = useReducer(appReducer, importedState);\n\n  useEffect(() => {\n    dispatch({ type: 'fill' }) //fills dishes list when page is loaded\n  }, []);\n\n  return (\n    <Router>\n      <nav>\n        <ul className=\"menu\">\n          <Link to=\"/menu\">\n            <li>Menues</li>\n          </Link>\n          <Link to=\"/contacts\">\n            <li>Contacts</li>\n          </Link>\n          <Link to=\"/info\">\n            <li>Info</li>\n          </Link>\n          <Link to=\"/prefs\">\n            <li>Preferences</li>\n          </Link>\n        </ul>\n      </nav>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Main />\n        </Route>\n        <Route exact path=\"/menu\">\n          <Menues />\n        </Route>\n        <Route exact path=\"/contacts\">\n          <Contacts />\n        </Route>\n        <Route path=\"/prefs\">\n          <Prefs dispatch={dispatch}/>\n        </Route>\n        <Route path=\"/info\">\n          <Info dispatch={dispatch} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Routerr;","import RouterNav from './routerNav';\n\nexport default RouterNav;","import React from 'react';\nimport './App.scss';\nimport RouterNav from './components/routerNav';\n\nfunction App() {\n  return (\n    <RouterNav />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}